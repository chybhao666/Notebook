/**************************** 安装 ****************************/
参考http://caffe.berkeleyvision.org/installation.html，就是这个页面，同时可以参考Ubuntu installation链接页面
系统ubuntu 14.04
GCC 4.8.2
Python 2.7.6
如果要用matlab，安装matlab R2015b （官方文档说支持到2015a，但我2015b使用暂时还没遇到问题，且“GCC版本过高”的问题有提醒但可忽略）

安装依赖项
sudo apt-get install libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libhdf5-serial-dev protobuf-compiler
其中libopencv-dev无法安装，解决一些版本过高问题后可以安装了，但想自己编译opencv，所以没安装这个。

不安装CUDA
caffe的安装不一定要装cuda, 可以禁用gpu,这样caffe可以在cpu下运行把Makefile.config, Makefile.config.example配置文件中 CPU_ONLY ：=1前的#去掉

BLAS: install ATLAS by sudo apt-get install libatlas-base-dev or install OpenBLAS or MKL for better CPU performance.
使用MKL，因为它最快。
后面调试matlab接口时候还是需要用到mkl库
首先下载并安装英特尔® 数学内核库 Linux* 版MKL(Intel(R) Parallel Studio XE Cluster Edition for Linux 2016)，下载链接是：https://software.intel.com/en-us/qualify-for-free-software/student， 使用学生身份（邮件 + 学校）下载Student版，填好各种信息，可以直接下载，同时会给你一个邮件告知序列号。下载完之后，要把文件解压到home文件夹(注意任何一级文件夹不能包含空格，否则安装会失败)
$ tar zxvf parallel_studio_xe_2016.tar.gz （如果你是直接拷贝压缩文件过来的）
$ chmod a+x parallel_studio_xe_2016 -R
$ sh install_GUI.sh

先不安装MKL了，采用ATLAS： sudo apt-get install libatlas-base-dev

编译安装opencv 3.0.0，见opencv安装笔记

Remaining dependencies, 14.04：
sudo apt-get install libgflags-dev libgoogle-glog-dev liblmdb-dev

定制config：
cp Makefile.config.example Makefile.config
CPU_ONLY := 1
BLAS := atlas
OPENCV_VERSION := 3
#CUDA_DIR := /usr/local/cuda
MATLAB_DIR := /usr/local/MATLAB/R2015b
WITH_PYTHON_LAYER := 1
然后就可以编译了：(在caffe目录下就行)
sudo make all -j4（因为我是4核）
sudo make test -j4
sudo make runtest -j4

Python接口支持：
安装依赖项 sudo pip install -r ./python/requirements.txt 或官方文档方法for req in $(cat requirements.txt); do pip install $req; done
add the module directory to your $PYTHONPATH by export PYTHONPATH=/path/to/caffe/python:$PYTHONPATH
sudo make pycaffe

Matlab接口支持
sudo make matcaffe  （Warning: You are using gcc version '4.8.2'. MEX completed successfully.）

使用MNIST数据集进行测试（命令行方法）：
1. 数据预处理
sh data/mnist/get_mnist.sh
切换到CPU模式：
在lenet_solver.prototxt最后一行修改solver_mode=CPU
2. 重建lmdb文件。Caffe支持三种数据格式输入网络，包括Image(.jpg, .png等)，leveldb，lmdb，根据自己需要选择不同输入吧。
sh examples/mnist/create_mnist.sh
生成mnist-train-lmdb 和 mnist-train-lmdb文件夹，这里包含了lmdb格式的数据集
3. 训练mnist
sh examples/mnist/train_lenet.sh

添加GPU：
安装了GTX 745，安装CUDA8.0，安装cuDNN：见 显卡笔记
$make clean，重新编译caffe。
$sudo make runtest –j4 时出现错误： libcudart.so.8.0: cannot open shared object file: No such file or directory
我在/etc/profile中export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH 了呀，为什么有这个问题？
在/etc/ld.so.conf中添加 /usr/local/cuda-8.0/lib64 ，运行$sudo ldconfig，问题解决。

/**************************** matlab接口 ****************************/
matlab接口测试：
matlab打开目录caffe/matlab/demo，运行classification_demo.m
使用的是默认图片，也可指定输入参数：
	im = imread('peppers.png');
	[scores, maxlabel] = classification_demo(im,0);
提示“Please download CaffeNet from Model Zoo before you run this demo”，可以看到../../models/bvlc_reference_caffenet/目录下没有../../models/bvlc_reference_caffenet/文件，文件下载说明见http://caffe.berkeleyvision.org/model_zoo.html
caffe目录下运行$ scripts/download_model_binary.py models/bvlc_reference_caffenet 文件大小232M。

/************************** RCNN(matlab) *******************************/
注意！最新版本的caffe与RCNN代码不兼容！解决方法见下面。
没使用GPU

R-CNN: Region-based Convolutional Neural Networks
Created by Ross Girshick, Jeff Donahue, Trevor Darrell and Jitendra Malik at UC Berkeley EECS.
https://github.com/rbgirshick/rcnn 代码和介绍

readme说明中，Install R-CNN
iv. Start MATLAB，要是在命令行中启动，会自动运行startup.m。提示“Warning: Please install Caffe in ./external/caffe”，是因为新版caffe中文件夹名字为+caffe，在caffe/matlab/目录$ln -sf +caffe caffe解决这个问题。（https://github.com/rbgirshick/rcnn/issues/56）
v. 的“ Selective Search code”不用自己点链接下载，运行rcnn_build()会发现缺少这个文件，在selective_search文件夹下会发现fetch_selective_search.sh，运行这个脚本即可。

g++版本过高的Warning，忽略。

找不到external/liblinear-1.94/blas/*.c的问题，把daxpy.c，ddot.c,dnrm2.c,dscal.c添过来

运行key = caffe('get_init_key');
出错Undefined function or variable 'caffe'. 
提示用caffe_，仍然出错Undefined function 'caffe_' for input arguments of type 'char'.
最新版本的caffe与RCNN间的问题，https://github.com/BVLC/caffe/releases下载caffe-rc2版本（https://github.com/rbgirshick/rcnn/issues/19）

接下来使用caffe-rc2！！！上面出现的这些问题都不出现了。

sudo make all时出错：build_release/lib/libcaffe.so: undefined reference to cv::imread(cv::String const&, int)' 
取消 makefile.config中USE_PKG_CONFIG := 1的注释

出现问题 Error in rcnn_load_model (line 28)
    caffe('init', rcnn_model.cnn.definition_file, rcnn_model.cnn.binary_file);

接下来使用caffe-0.9999！！！
出现问题：tools/caffe.cpp:219:3: error: ‘gflags’ has not been declared
   gflags::SetUsageMessage("command line brew\n"
（http://stackoverflow.com/questions/30426734/caffe-recompile-libgflags-a-with-fpic-error）
在tools/caffe.cpp中添加：
namespace gflags = google;

出现问题：
makefile中 LIBRARIES += opencv_core opencv_highgui opencv_imgproc opencv_imgcodecs，即找到LIBRARIES，实际只需添加缺少的opencv_imgcodecs
还是同样问题，可能需要 $make clean
（http://www.cnblogs.com/wangxiaocvpr/p/5200837.html）

rcnn_demo('PASCAL',0)耗时
found 2104 candidates (in 3.321s)
Extracting CNN features from regions...Starting parallel pool (parpool) using the 'local' profile ... connected to 4 workers.
done (in 337.459s).
Scoring regions with detectors...done (in 0.023s)
Applying NMS...done (in 0.034s)
Total 20-class detection time: 340.856s

VOC2007
http://host.robots.ox.ac.uk:8080/pascal/VOC/voc2007/  annotated test data (430MB tar file)

http://caffe.berkeleyvision.org/的R-CNN detection

/************************** fast-rcnn(python) *******************************/
https://github.com/rbgirshick/fast-rcnn
Created by Ross Girshick at Microsoft Research, Redmond.
我的环境：ubuntu14.04+cuda8+cudnn5

自带caffe，注意git clone时使用“--recursive”
提供Python和matlab两种方式
修改$FRCN_ROOT/caffe-fast-rcnn下的

按照github上教程，运行demo（./tools/demo.py）时出现以下错误，看来必须要GPU了。
Cannot use GPU in CPU-only Caffe: check mode.

出现各种cudnn的错误，使用的caffe不兼容cudnn5。
尝试https://github.com/rbgirshick/fast-rcnn/issues/140的解决方法，不行。

尝试不要cudnn，运行./tools/demo.py时，出错 Check failed: error == cudaSuccess (2 vs. 0)  out of memory
尝试解决方法 https://www.zhihu.com/question/41493725/answer/91819847，没法解决这个问题

放弃～～～
替换 include/caffe/util/cudnn.hpp 导致更多错误

/************************** faster-rcnn(python) *******************************/
https://github.com/rbgirshick/py-faster-rcnn
official MATLAB version: https://github.com/ShaoqingRen/faster_rcnn
Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun
我的环境：ubuntu14.04+cuda8+cudnn5

和fast-rcnn使用的caffe属于不同分支

Download pre-computed Faster R-CNN detectors

根据github上推荐的Makefile.config来修改配置

关于cudnn不兼容caffe问题：http://www.cnblogs.com/zjutzz/p/6034408.html
	用最新caffe源码的以下文件替换掉faster rcnn 的对应文件
	include/caffe/layers/cudnn_relu_layer.hpp, src/caffe/layers/cudnn_relu_layer.cpp, src/caffe/layers/		cudnn_relu_layer.cu
	include/caffe/layers/cudnn_sigmoid_layer.hpp, src/caffe/layers/cudnn_sigmoid_layer.cpp, src/caffe/layers/cudnn_sigmoid_layer.cu
	include/caffe/layers/cudnn_tanh_layer.hpp, src/caffe/layers/cudnn_tanh_layer.cpp, src/caffe/layers/cudnn_tanh_layer.cu
	include/caffe/util/cudnn.hpp
	将 faster rcnn 中的 src/caffe/layers/cudnn_conv_layer.cu 文件中的所有
	cudnnConvolutionBackwardData_v3 函数名替换为 cudnnConvolutionBackwardData
	cudnnConvolutionBackwardFilter_v3函数名替换为 cudnnConvolutionBackwardFilter
另一种方法http://blog.csdn.net/rzjmpb/article/details/52373012 未尝试

opencv的问题，取消Makefile.config中USE_PKG_CONFIG := 1注释

./tools/demo.py 运行成功，GPU大概使用了1.8G

/************************** yolo *******************************/
http://pjreddie.com/darknet/yolo/
You Only Look Once: Unified, Real-Time Object Detection
Joseph Redmon(华盛顿大学), Santosh Divvala, Ross Girshick, Ali Farhadi

下载darknet，修改Makefile：GPU=1， OPENCV=1
make -j4
下载pre-trained weight，放在darknet目录下
测试 ./darknet detect cfg/yolo.cfg yolo.weights data/dog.jpg

GPU=1
CUDNN=0
OPENCV=1
DEBUG=0
# Training YOLO on VOC
下载数据，挺快的。
根据官方教程来就行。
1.11 13:21开始训练，
1.11 14:05得到yolo-voc_100.weights
1.11 14:50得到yolo-voc_200.weights
...
1.11 21:06得到yolo-voc_1000.weights
1.12 04:32得到yolo-voc_2000.weights
1.12 11:57得到yolo-voc_3000.weights
1.12 19:29得到yolo-voc_4000.weights
1.13 02:57得到yolo-voc_5000.weights
1.13 10:26得到yolo-voc_6000.weights
1.13 17:53得到yolo-voc_7000.weights
1.14 01:21得到yolo-voc_8000.weights
1.14 08:45得到yolo-voc_9000.weights
1.14 16:23得到yolo-voc_10000.weights
...
自己停掉训练程序了
GPU使用（含系统使用）一直在3.3G

max_batches 见cfg/*.cfg

youtube - watch later

/************************** ssd *******************************/
https://github.com/weiliu89/caffe/tree/ssd
SSD: Single Shot MultiBox Detector
Wei Liu(北卡罗来纳大学教堂山分校), Dragomir Anguelov, Dumitru Erhan, Christian Szegedy, Scott Reed, Cheng-Yang Fu, Alexander C. Berg

千万别取消注释 # USE_OPENCV := 0，否则跑demo会遇到vedio的错误
按官方教程编译，其中make runtest -j4需要8小时
直接用提供的模型，下载models_VGGNet_VOC0712_SSD_300x300.tar.gz

尝试python examples/ssd/ssd_pascal_webcam.py，
出现错误：ImportError: No module named caffe
添加相应的caffe Python路径：export PYTHONPATH=.../caffe-ssd/python:$PYTHONPATH  (这点在caffe官方教程中提过，我把export写在了/etc/profile)
出现错误：Aborted at 1484534223 (unix time) try "date -d @1484534223" if you are using GNU date
尝试重新编译解决，依然是同样的错误

别人的错误总结：http://blog.csdn.net/u013832707/article/details/53426923d


/************************** begin *******************************/
https://www.zhihu.com/question/35887527  如何评价rcnn、fast-rcnn和faster-rcnn这一系列方法？
RCNN -> SPPNET（MSRA的kaiming组） -> Fast-RCNN -> Faster-RCNN

RCNN 解决的是，“为什么不用CNN做classification呢？”
（但是这个方法相当于过一遍network出bounding box，再过另一个出label，原文写的很不“elegant”
Fast-RCNN 解决的是，“为什么不一起输出bounding box和label呢？”
（但是这个时候用selective search generate regional proposal的时间实在太长了
Faster-RCNN 解决的是，“为什么还要用selective search呢？”

/************************** begin *******************************/
https://www.zhihu.com/question/24904450  如何评价今年的 ILSVRC 2014 结果？
R-CNN的具体想法是，将detection分为寻找object（不管具体类别，只管“那儿好像有个东西”）和识别object（识别每个“东西”到底是狗还是猫）两个过程。在第一步，我们可以用很多底层特征，比如说图像中的色块，图像中的边界信息，等等。第二步就可以祭出CNN来做识别，网络越好，识别率也就越高。

/**************************  others  *******************************/
Alex提出的alexnet网络结构模型赢得了2012届的冠军

去看DPM




