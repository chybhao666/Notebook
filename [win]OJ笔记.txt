觉得代码没问题，结果却是Wrong Answer，原因可能是该用double或long long存储却用了int，也有可能是输出浮点数的格式问题。

abs(float)会有多个匹配问题。

《2013年王道论坛计算机考研机试指南》
最长递增子序列（LIS） F(i)=max{1,F[j]+1 | a_j<a_i && j<i}
最长公共子序列（LCS） ：
	若S1[x]==S2[y]，那么必存在一个最长公共子串以S1[x]或S2[y]结尾，其他部分等价于S1中前x-1个字符和S2中前y-1个字符的最长公共子串，即dp[x][y]=dp[x-1][y-1]+1。
	若S1[x]！=S2[y]，此时最长公共子串长度为S1中前x-1个字符和S2中前y个字符的最长公共子串长度和S1中前x个字符和S2中前y-1个字符的最长公共子串长度的较大者，即dp[x][y]=max{dp[x-1][y],dp[x][y-1]}。

《算法概论》
(完全背包问题) 多副本背包 K(w)  =max{K(w-w_i)+v_i}  
(0-1背包问题)  单副本背包 K(w,j)=max{K(w-w_j,j-1),K(w,j-1)} 
上面两个问题的时间复杂度其实一样。
在《王道》中，完全背包问题可以转为0-1背包问题，也就是让每件物品的数量为V/w_i，但当w_i较小时，时间复杂度太大。
(多重背包)     解决方法是转为0-1背包问题，但有个技巧，将某物品按数量：1,2,4，...，k-2^c+1 来分。

